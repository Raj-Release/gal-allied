package com.shaic.claim.registration;

import java.util.Date;
import java.util.Iterator;

import com.shaic.arch.SHAUtils;
import com.shaic.newcode.wizard.dto.NewIntimationDto;
import com.vaadin.v7.data.Property.ReadOnlyException;
import com.vaadin.v7.data.fieldgroup.FieldGroup;
import com.vaadin.v7.data.util.BeanItem;
import com.vaadin.ui.Component;
import com.vaadin.ui.FormLayout;
import com.vaadin.ui.Panel;
import com.vaadin.v7.ui.TextField;
import com.vaadin.v7.ui.VerticalLayout;
import com.vaadin.ui.Window;
import com.vaadin.ui.themes.ValoTheme;

public class ViewIntimationRegisteredDetails extends Window {

	private static final long serialVersionUID = 2584843233993869995L;

	
	private Panel mainPanel;

	private VerticalLayout wholeVerticalLayout;
	private Panel mainaccordion;
	
	
	
	private TextField cpuCode;
	
	private Panel intimationDetails;
	private FormLayout intimationFormLayout;
	private TextField idCardNo;
	private TextField hospitalCode;
	private TextField agentBrokerName;
	private TextField agentBrokerCode;
	private TextField smName;
	private TextField smCode;
	private TextField reasonForAdmission;
	private TextField fieldVisitDoctorName;
	private TextField hospitalAadmissionDate;
	private TextField hospitalNetwork;
	private TextField hospitalCity;
	private TextField hospitalName;
	private TextField insuredPatientName;
	private TextField patientName;
	private TextField productName;
	private TextField policyIssueOffice;
	private TextField policyNumber;
	private TextField intimationDate;
	private TextField intimationId;

	final String CPU_CODE;

	/**
	 * The constructor should first build the main layout, set the composition
	 * root and then do any custom initialization.
	 *
	 * The constructor will not be automatically regenerated by the visual
	 * editor.
	 */
	public ViewIntimationRegisteredDetails() {

		CPU_CODE = "";
		Panel panel = buildIntimationDetails();
		setContent(panel);

		setWindowPosition();

		// TODO add user code here
	}

	private void setWindowPosition() {
		this.setWidth(900, Unit.PIXELS);
		this.setHeight(700, Unit.PIXELS);
		setModal(true);
		setClosable(true);
		setResizable(true);
	}

	public ViewIntimationRegisteredDetails(NewIntimationDto data,
			Boolean isRegistered) {
		VerticalLayout layout = buildMainPanel();
		setContent(layout);
		bindIntimationFieldGroup(data);
	
		if (data.getAdmissionDate() != null) {
			try {
				Date tempDate = SHAUtils.formatTimestamp(data.getAdmissionDate()
						.toString());
				hospitalAadmissionDate
						.setValue(SHAUtils.formatDate(tempDate));
			} catch (ReadOnlyException e) {
				e.printStackTrace();
			}
		}
		
		if (data.getDateOfIntimation() != null) {
			try {
				Date tempDate = SHAUtils.formatTimestamp(data.getDateOfIntimation()
						.toString());
				intimationDate
						.setValue(SHAUtils.formatDate(tempDate));
			} catch (ReadOnlyException e) {
				e.printStackTrace();
			}
		}
		
		
		CPU_CODE = data.getCpuCode().toString();
		setIntimationData(data);
		setReadOnly(intimationFormLayout);
		setWindowPosition();
	}
	
	public void setIntimationData(NewIntimationDto newIntimationDto) {
		policyNumber.setValue(newIntimationDto.getPolicy().getPolicyNumber());
		policyIssueOffice
				.setValue((newIntimationDto.getPolicy() != null && newIntimationDto
						.getPolicy().getHomeOfficeCode() != null) ? newIntimationDto
						.getPolicy().getHomeOfficeCode() : "");

		if (newIntimationDto.getInsuredPatient() != null) {
			patientName.setValue(newIntimationDto.getInsuredPatient()
					.getInsuredName() != null ? newIntimationDto
					.getInsuredPatient().getInsuredName() : "");
			idCardNo.setValue(newIntimationDto.getInsuredPatient()
					.getHealthCardNumber() != null ? newIntimationDto
					.getInsuredPatient().getHealthCardNumber() : "");
		}

		if (newIntimationDto.getPolicy() != null
				&& newIntimationDto.getPolicy().getProduct() != null) {
			productName.setValue(newIntimationDto.getPolicy().getProduct()
					.getProductType() != null ? newIntimationDto.getPolicy()
					.getProduct().getProductType() : "");
		}

		if (newIntimationDto.getHospitalDto() != null) {
			hospitalName
					.setValue(newIntimationDto.getHospitalDto().getName() != null ? newIntimationDto
							.getHospitalDto().getName() : "");
			hospitalCity
					.setValue(newIntimationDto.getHospitalDto() != null ? newIntimationDto
							.getHospitalDto().getCity() : "");
			hospitalNetwork.setValue(newIntimationDto.getHospitalDto()
					.getHospitalType() != null ? newIntimationDto
					.getHospitalDto().getHospitalType().getValue() : "");

			hospitalCode.setValue(newIntimationDto.getHospitalDto()
					.getHospitalCode() != null ? newIntimationDto
					.getHospitalDto().getHospitalCode() : "");
		}

		smCode.setValue(newIntimationDto.getPolicy().getSmCode() != null ? newIntimationDto
				.getPolicy().getSmCode() : "");
		smName.setValue(newIntimationDto.getPolicy().getSmName() != null ? newIntimationDto
				.getPolicy().getSmName() : "");
		agentBrokerName.setValue(newIntimationDto.getPolicy().getAgentName() != null ? newIntimationDto
				.getPolicy().getAgentName() : "");
		agentBrokerCode.setValue(newIntimationDto.getPolicy().getAgentCode() != null ? newIntimationDto
				.getPolicy().getAgentCode() : "");

	}

	private void bindIntimationFieldGroup(NewIntimationDto data) {
		FieldGroup binder = new FieldGroup();
		BeanItem<NewIntimationDto> item = new BeanItem<NewIntimationDto>(data);
		binder.setItemDataSource(item);
		binder.bindMemberFields(this);
	}

	private void setReadOnly(FormLayout layout) {
		Iterator<Component> i = layout.iterator();
		while (i.hasNext()) {
			Component c = i.next();
			if (c instanceof TextField) {
				TextField field = (TextField) c;
				field.setNullRepresentation("");
				field.setReadOnly(true);
				field.setWidth("350px");
				field.addStyleName(ValoTheme.TEXTFIELD_BORDERLESS);
			}
		}
	}

	private VerticalLayout buildMainPanel() {
		// common part: create layout
		mainPanel = new Panel();
		mainPanel.setCaption("Status of Intimation No.");
		//Vaadin8-setImmediate() mainPanel.setImmediate(false);
		mainPanel.setWidth("100.0%");
		mainPanel.setHeight("100.0%");

		return buildMainAccordion();
	}

	private VerticalLayout buildMainAccordion() {
		// common part: create layout
		mainaccordion = new Panel();
		//Vaadin8-setImmediate() mainaccordion.setImmediate(true);
		mainaccordion.setWidth("100.0%");
		mainaccordion.setHeight("100.0%");
		mainaccordion.setSizeFull();

		wholeVerticalLayout = new VerticalLayout();
		wholeVerticalLayout.setSpacing(true);

		intimationDetails = buildIntimationDetails();
		wholeVerticalLayout.addComponent(intimationDetails);

		return wholeVerticalLayout;
	}

	private Panel buildIntimationDetails() {
		intimationDetails = new Panel("Initmation Details");
		//Vaadin8-setImmediate() intimationDetails.setImmediate(false);
		intimationDetails.setWidth("100.0%");
		intimationDetails.setHeight("-1px");

		intimationFormLayout = buildIntimationFormLayout();
		intimationDetails.setContent(intimationFormLayout);

		return intimationDetails;
	}

	private FormLayout buildIntimationFormLayout() {	
		intimationFormLayout = new FormLayout();
		//Vaadin8-setImmediate() intimationFormLayout.setImmediate(true);
		intimationFormLayout.setWidth("100.0%");
		intimationFormLayout.setHeight("100.0%");
		intimationFormLayout.setMargin(false);
		intimationFormLayout.setSpacing(true);
		intimationFormLayout.addStyleName("layoutDesign");
		
		intimationId = new TextField();
		intimationId.setCaption("Intimation No.");	
		intimationFormLayout.addComponent(intimationId);	

		intimationDate = new TextField();
		intimationDate.setCaption("Date of Intimation");
		intimationFormLayout.addComponent(intimationDate);

		policyNumber = new TextField();
		policyNumber.setCaption("Policy No. / Adv. Rcpt. No");
		intimationFormLayout.addComponent(policyNumber);

		policyIssueOffice = new TextField();
		policyIssueOffice.setCaption("Policy Issuing Office");
		intimationFormLayout.addComponent(policyIssueOffice);

		productName = new TextField();
		productName.setCaption("Product Name");
		intimationFormLayout.addComponent(productName);

		insuredPatientName = new TextField();
		insuredPatientName.setCaption("Insured Name");
		intimationFormLayout.addComponent(insuredPatientName);

		patientName = new TextField();
		patientName.setCaption("Patient Name");
		intimationFormLayout.addComponent(patientName);

		hospitalName = new TextField();
		hospitalName.setCaption("Hospital Name");
		intimationFormLayout.addComponent(hospitalName);

		hospitalCity = new TextField();
		hospitalCity.setCaption("City of Hospital");
		intimationFormLayout.addComponent(hospitalCity);

		hospitalNetwork = new TextField();
		hospitalNetwork.setCaption("Network / Non-Network");
		intimationFormLayout.addComponent(hospitalNetwork);

		hospitalAadmissionDate = new TextField();
		hospitalAadmissionDate.setCaption("Date of Admission");
		intimationFormLayout.addComponent(hospitalAadmissionDate);

		fieldVisitDoctorName = new TextField();
		fieldVisitDoctorName.setCaption("Field Visit Doctor Name");
		intimationFormLayout.addComponent(fieldVisitDoctorName);

		reasonForAdmission = new TextField();
		reasonForAdmission.setCaption("Reason For Admission");
		intimationFormLayout.addComponent(reasonForAdmission);

		cpuCode = new TextField();
		cpuCode.setCaption("CPU Code");
		intimationFormLayout.addComponent(cpuCode);

		smCode = new TextField();
		smCode.setCaption("SM Code");
		intimationFormLayout.addComponent(smCode);

		smName = new TextField();
		smName.setCaption("SM Name");
		intimationFormLayout.addComponent(smName);

		agentBrokerCode = new TextField();
		agentBrokerCode.setCaption("Agent / Broker Code");
		intimationFormLayout.addComponent(agentBrokerCode);

		agentBrokerName = new TextField();
		agentBrokerName.setCaption("Agent / Broker Name");
		intimationFormLayout.addComponent(agentBrokerName);

		hospitalCode = new TextField();
		hospitalCode.setCaption("Hospital Code");
		intimationFormLayout.addComponent(hospitalCode);

		idCardNo = new TextField();
		idCardNo.setCaption("ID Card No.");
		intimationFormLayout.addComponent(idCardNo);
		
		return intimationFormLayout;
	}

}
