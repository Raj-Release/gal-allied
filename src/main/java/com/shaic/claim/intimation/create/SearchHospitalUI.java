package com.shaic.claim.intimation.create;

import java.util.ArrayList;
import java.util.List;

import com.shaic.domain.HospitalSearchBean;
import com.shaic.domain.HospitalSearchResultBean;
import com.shaic.domain.HospitalService;
import com.shaic.domain.Hospitals;
import com.shaic.domain.UnFreezHospitals;
import com.vaadin.annotations.AutoGenerated;
import com.vaadin.cdi.UIScoped;
import com.vaadin.v7.data.fieldgroup.BeanFieldGroup;
import com.vaadin.v7.data.fieldgroup.FieldGroup.CommitException;
import com.vaadin.v7.data.util.BeanItemContainer;
import com.vaadin.ui.AbsoluteLayout;
import com.vaadin.ui.Alignment;
import com.vaadin.ui.Button;
import com.vaadin.ui.Button.ClickEvent;
import com.vaadin.ui.Button.ClickListener;
import com.vaadin.ui.GridLayout;
import com.vaadin.v7.ui.HorizontalLayout;
import com.vaadin.v7.ui.Label;
import com.vaadin.ui.NativeButton;
import com.vaadin.v7.ui.Table;
import com.vaadin.v7.ui.TextField;
import com.vaadin.v7.ui.VerticalLayout;
import com.vaadin.ui.Window;
@UIScoped
public class SearchHospitalUI  extends Window  {

	/*- VaadinEditorProperties={"grid":"RegularGrid,20","showGrid":true,"snapToGrid":true,"snapToObject":true,"movingGuides":false,"snappingDistance":10} */

	

	
	/**
	 * 
	 */
	private static final long serialVersionUID = 1L;


	
	private HospitalService hospitalService;
	
	
	public static BeanFieldGroup<HospitalSearchBean> fieldGroup;
	public static BeanItemContainer<HospitalSearchBean> tmpInsuredSearchBeanContainer;
	
	@AutoGenerated
	private AbsoluteLayout mainLayout;
	@AutoGenerated
	private VerticalLayout sverticalLayout;
	@AutoGenerated
	private Table resulttable;
	@AutoGenerated
	private VerticalLayout mainverticalLayout;
	@AutoGenerated
	private HorizontalLayout buttonhorizontalLayout;
	@AutoGenerated
	private NativeButton resetButton;
	@AutoGenerated
	private NativeButton searchButton;
	@AutoGenerated
	private GridLayout contantgridLayout;
	@AutoGenerated
	private TextField hospitalPhoneNotextField;
	@AutoGenerated
	private Label hospitalPhoneNolabel;
	@AutoGenerated
	private HorizontalLayout mainhorizontalLayout;
	@AutoGenerated
	private Label titleLbl;
	
	
	
	public SearchHospitalUI(HospitalService a_hospitalService) {
		// TODO Auto-generated constructor stub
		this.hospitalService = a_hospitalService;
	}


	/**
	 * The constructor should first build the main layout, set the
	 * composition root and then do any custom initialization.
	 *
	 * The constructor will not be automatically regenerated by the
	 * visual editor.
	 * @return 
	 */
	


	public void  initView() {
		
		setCaption("Hospital List");
		buildMainLayout();
		setContent(mainLayout);
		setHeight("550px");
		setWidth("750px");
	}


	@AutoGenerated
	private AbsoluteLayout buildMainLayout() {
		tmpInsuredSearchBeanContainer = new BeanItemContainer<HospitalSearchBean>(HospitalSearchBean.class);
		fieldGroup = new BeanFieldGroup<HospitalSearchBean>(HospitalSearchBean.class);
		 fieldGroup.setItemDataSource(new HospitalSearchBean());
		// common part: create layout
		mainLayout = new AbsoluteLayout();
		//Vaadin8-setImmediate() mainLayout.setImmediate(false);
		mainLayout.setWidth("100%");
		mainLayout.setHeight("100%");
		
		// top-level component properties
		setWidth("100.0%");
		setHeight("100.0%");
		
		// verticalLayout_2
		sverticalLayout = buildMainVerticalLayout_2();
		mainLayout.addComponent(sverticalLayout,
				"top:0.0px;right:4.0px;left:0.0px;");
		
		fieldGroup = new BeanFieldGroup<HospitalSearchBean>(HospitalSearchBean.class);
//		fieldGroup.discard();
		if (tmpInsuredSearchBeanContainer.getItemIds().size() != 0) {				
			HospitalSearchBean orgBean = tmpInsuredSearchBeanContainer.getItemIds().get(0);
			fieldGroup.setItemDataSource(orgBean);
	     	   }
				else
				{
					fieldGroup.setItemDataSource(new HospitalSearchBean());

				}
		
		fieldGroup.bind(hospitalPhoneNotextField, "phoneNumber");
		
		return mainLayout;
	}


	@AutoGenerated
	private VerticalLayout buildMainVerticalLayout_2() {
		// common part: create layout
		sverticalLayout = new VerticalLayout();
		//Vaadin8-setImmediate() sverticalLayout.setImmediate(false);
		sverticalLayout.setWidth("100.0%");
		sverticalLayout.setHeight("-1px");
		sverticalLayout.setMargin(true);
		sverticalLayout.setSpacing(true);
		
		// mainhorizontalLayout
		mainhorizontalLayout = buildMainhorizontalLayout();
		sverticalLayout.addComponent(mainhorizontalLayout);
		
		// mainverticalLayout
		mainverticalLayout = buildMainverticalLayout();
		sverticalLayout.addComponent(mainverticalLayout);
		sverticalLayout.setComponentAlignment(mainverticalLayout,
				new Alignment(48));
		
		// resulttable
		resulttable = new Table();
		//Vaadin8-setImmediate() resulttable.setImmediate(false);	
		resulttable.setSizeFull();
		resulttable.setPageLength(5);
		resulttable.setVisible(false);
		resulttable.addGeneratedColumn("Select", new Table.ColumnGenerator() {
		      @Override
		      public Object generateCell(final Table source, final Object itemId, Object columnId) {
		        /* When the chekboc value changes, add/remove the itemId from the selectedItemIds set */
		        final Button selectButton = new Button("Select");
		        selectButton.addClickListener(new Button.ClickListener() {
			    public void buttonClick(ClickEvent event) {
				    	
			        	
			        } 
			    });
		    	selectButton.addStyleName("link");
		        return selectButton;
		      }
		    });
		sverticalLayout.addComponent(resulttable);
		sverticalLayout.setComponentAlignment(resulttable, new Alignment(48));
		
		return sverticalLayout;
	}


	@AutoGenerated
	private HorizontalLayout buildMainhorizontalLayout() {
		// common part: create layout
		mainhorizontalLayout = new HorizontalLayout();
		//Vaadin8-setImmediate() mainhorizontalLayout.setImmediate(false);
		mainhorizontalLayout.setWidth("100.0%");
		mainhorizontalLayout.setHeight("-1px");
		mainhorizontalLayout.setMargin(false);
		
		// titleLbl
		titleLbl = new Label();
		//Vaadin8-setImmediate() titleLbl.setImmediate(false);
		titleLbl.setWidth("-1px");
		titleLbl.setHeight("-1px");
		titleLbl.setValue("Insured List");
		
		mainhorizontalLayout.addComponent(titleLbl);
		mainhorizontalLayout.setComponentAlignment(titleLbl, new Alignment(48));
		
		return mainhorizontalLayout;
	}


	@AutoGenerated
	private VerticalLayout buildMainverticalLayout() {
		// common part: create layout
		mainverticalLayout = new VerticalLayout();
		//Vaadin8-setImmediate() mainverticalLayout.setImmediate(false);
		mainverticalLayout.setWidth("-1px");
		mainverticalLayout.setHeight("-1px");
		mainverticalLayout.setMargin(true);
		mainverticalLayout.setSpacing(true);
		
		// contantgridLayout
		contantgridLayout = buildContantgridLayout();
		mainverticalLayout.addComponent(contantgridLayout);
		
		// buttonhorizontalLayout
		buttonhorizontalLayout = buildButtonhorizontalLayout();
		mainverticalLayout.addComponent(buttonhorizontalLayout);
		mainverticalLayout.setComponentAlignment(buttonhorizontalLayout,
				new Alignment(48));
		
		return mainverticalLayout;
	}


	@AutoGenerated
	private GridLayout buildContantgridLayout() {
		// common part: create layout
		contantgridLayout = new GridLayout();
		//Vaadin8-setImmediate() contantgridLayout.setImmediate(false);
		contantgridLayout.setWidth("-1px");
		contantgridLayout.setHeight("-1px");
		contantgridLayout.setMargin(true);
		contantgridLayout.setSpacing(true);
		contantgridLayout.setColumns(2);
		contantgridLayout.setRows(4);
		
		// insuredNamelabel
		hospitalPhoneNolabel = new Label();
		//Vaadin8-setImmediate() hospitalPhoneNolabel.setImmediate(false);
		hospitalPhoneNolabel.setWidth("-1px");
		hospitalPhoneNolabel.setHeight("-1px");
		hospitalPhoneNolabel.setValue("Hospital Phone No");
		contantgridLayout.addComponent(hospitalPhoneNolabel, 0, 0);
		
		// insuredNametextField
		hospitalPhoneNotextField = new TextField();
		//Vaadin8-setImmediate() hospitalPhoneNotextField.setImmediate(false);
		hospitalPhoneNotextField.setWidth("-1px");
		hospitalPhoneNotextField.setHeight("-1px");
		contantgridLayout.addComponent(hospitalPhoneNotextField, 1, 0);
		
		return contantgridLayout;
	}


	@AutoGenerated
	private HorizontalLayout buildButtonhorizontalLayout() {
		// common part: create layout
		buttonhorizontalLayout = new HorizontalLayout();
		//Vaadin8-setImmediate() buttonhorizontalLayout.setImmediate(false);
		buttonhorizontalLayout.setWidth("-1px");
		buttonhorizontalLayout.setHeight("-1px");
		buttonhorizontalLayout.setMargin(true);
		buttonhorizontalLayout.setSpacing(true);
		
		// searchButton
		searchButton = new NativeButton();
		searchButton.setCaption("Search");
		//Vaadin8-setImmediate() searchButton.setImmediate(true);
		searchButton.setWidth("-1px");
		searchButton.setHeight("-1px");
		searchButton.addClickListener(new ClickListener() {	

			/**
			 * 
			 */
			private static final long serialVersionUID = -5914033995530670042L;

			@Override
			public void buttonClick(ClickEvent event) {
				
				try {
					fieldGroup.commit();
					
					tmpInsuredSearchBeanContainer.addBean(fieldGroup.getItemDataSource().getBean());
					
				
					if (tmpInsuredSearchBeanContainer.getItemIds().size() != 0) {				
						HospitalSearchBean intimationBean=tmpInsuredSearchBeanContainer.getItemIds().get(0);
						System.out.println("=========HospitalSearchBean========"+hospitalPhoneNotextField.getValue());
//						fieldGroup.setItemDataSource(intimationBean);
						
						List<UnFreezHospitals> hospitalList=hospitalService.searchHospitalPhoneNo(hospitalPhoneNotextField.getValue(),null,null);
						List<HospitalSearchResultBean> hospitalSearchResultBeanList = new ArrayList<HospitalSearchResultBean>();
								for(UnFreezHospitals hospital:hospitalList){
									HospitalSearchResultBean hospitalSearchResultBean = new HospitalSearchResultBean();
									hospitalSearchResultBean.setKey(hospital.getKey());
									hospitalSearchResultBean.setFax(hospital.getFax());
									hospitalSearchResultBean.setPhoneNumber(hospital.getPhoneNumber());
//									hospitalSearchResultBean.setAddress(hospital.getBuildingName() + "" +hospital.getDoorApartmentNumber() +"" + hospital.getCity() + ""+ hospital.getDistrict() + ""+ hospital.getState() +""+ hospital.getCountry() +""+ hospital.getPincode());
									hospitalSearchResultBean.setAddress(hospital.getAddress());
									
									
								}
								BeanItemContainer<HospitalSearchResultBean> hospitalSearchResultBeanContainer = new BeanItemContainer<HospitalSearchResultBean>(
										HospitalSearchResultBean.class);
								hospitalSearchResultBeanContainer.addAll(hospitalSearchResultBeanList);
						resulttable.setContainerDataSource(hospitalSearchResultBeanContainer);
						resulttable.setContainerDataSource(hospitalSearchResultBeanContainer);
						Object[] columns = new Object[] { "hospitalName","address", "phoneNumber", "fax", "Select"};
						resulttable.setVisibleColumns(columns);
						resulttable.setColumnHeader("hospitalName", "Hospital  Name");
						resulttable.setColumnHeader("address", "Hospital  Address");
						resulttable.setColumnHeader("phoneNumber", "Hospital Ph No");
						resulttable.setColumnHeader("fax", "Hospital Fax");
						resulttable.setVisible(true);
						
					}
				
					
				} catch (CommitException e) {
					// TODO Auto-generated catch block
					e.printStackTrace();
				}
				
				
			}
		});
		
		buttonhorizontalLayout.addComponent(searchButton);
		
		// resetButton
		resetButton = new NativeButton();
		resetButton.setCaption("Reset");
		//Vaadin8-setImmediate() resetButton.setImmediate(true);
		resetButton.setWidth("-1px");
		resetButton.setHeight("-1px");
		buttonhorizontalLayout.addComponent(resetButton);
		
		return buttonhorizontalLayout;
	}

	

}
