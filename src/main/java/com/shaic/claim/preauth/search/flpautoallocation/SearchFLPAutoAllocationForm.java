package com.shaic.claim.preauth.search.flpautoallocation;

import java.util.Iterator;

import javax.annotation.PostConstruct;
import javax.ejb.EJB;
import javax.inject.Inject;

import org.vaadin.addon.cdimvp.ViewComponent;

import com.shaic.arch.EnhancedFieldGroupFieldFactory;
import com.shaic.arch.table.Searchable;
import com.shaic.claim.preauth.search.autoallocation.SearchPreAuthAutoAllocationTable;
import com.shaic.claim.preauth.wizard.dto.SearchPreauthFormDTO;
import com.shaic.claim.preauth.wizard.dto.SearchPreauthTableDTO;
import com.shaic.domain.PreauthService;
import com.vaadin.ui.Alignment;
import com.vaadin.ui.Button;
import com.vaadin.ui.Component;
import com.vaadin.ui.FormLayout;
import com.vaadin.ui.Panel;
import com.vaadin.ui.Button.ClickEvent;
import com.vaadin.ui.themes.ValoTheme;
import com.vaadin.v7.data.fieldgroup.BeanFieldGroup;
import com.vaadin.v7.data.fieldgroup.FieldGroup.CommitException;
import com.vaadin.v7.ui.ComboBox;
import com.vaadin.v7.ui.HorizontalLayout;
import com.vaadin.v7.ui.Label;
import com.vaadin.v7.ui.Table;
import com.vaadin.v7.ui.TextField;
import com.vaadin.v7.ui.VerticalLayout;

public class SearchFLPAutoAllocationForm extends ViewComponent{


	private static final long serialVersionUID = -3616823920991467671L;


	private BeanFieldGroup<SearchFLPAutoAllocationTableDTO> binder;

	@EJB
	private PreauthService preauthService;

	Button flpSearchBtn;

	Button resetBtn;

	VerticalLayout buildPreauthSearchLayuout;

	private Searchable searchable;	
	

	public void addSearchListener(Searchable searable)
	{
		this.searchable = searable;
	}

	public SearchFLPAutoAllocationTableDTO getSearchDTO()
	{
		try {
			this.binder.commit();
			SearchFLPAutoAllocationTableDTO bean = this.binder.getItemDataSource().getBean();
			return  bean;
		} catch (CommitException e) {
			e.printStackTrace();
		}
		return null;

	}

	/**
	 * The constructor should first build the main layout, set the
	 * composition root and then do any custom initialization.
	 *
	 * The constructor will not be automatically regenerated by the
	 * visual editor.
	 */

	@PostConstruct
	public void init() {
		initBinder();
		buildPreauthSearchLayuout  = new VerticalLayout();
		Panel preauthPremedicalPanel	= new Panel();
		preauthPremedicalPanel.setCaption("First Level Process - Auto Allocation");
		preauthPremedicalPanel.addStyleName("panelHeader");
		preauthPremedicalPanel.addStyleName("g-search-panel");
		preauthPremedicalPanel.setContent(buildPreauthSearchLayout());
		buildPreauthSearchLayuout.addComponent(preauthPremedicalPanel);
		buildPreauthSearchLayuout.setComponentAlignment(preauthPremedicalPanel, Alignment.MIDDLE_LEFT);
		buildPreauthSearchLayuout.setMargin(false);
		setCompositionRoot(buildPreauthSearchLayuout);
		addListener();
	}

	private void initBinder()
	{
		this.binder = new BeanFieldGroup<SearchFLPAutoAllocationTableDTO>(SearchFLPAutoAllocationTableDTO.class);
		this.binder.setItemDataSource(new SearchFLPAutoAllocationTableDTO());
		this.binder.setFieldFactory(new EnhancedFieldGroupFieldFactory());
	}


	private VerticalLayout buildPreauthSearchLayout() 
	{
		VerticalLayout verticalLayout = new VerticalLayout();
		verticalLayout.setWidth("100%");
		verticalLayout.setMargin(true);		 	

		flpSearchBtn = new Button();
		flpSearchBtn.setCaption("Get Next");
		flpSearchBtn.addStyleName(ValoTheme.BUTTON_FRIENDLY);
		flpSearchBtn.setWidth("-1px");
		flpSearchBtn.setHeight("-10px");
		flpSearchBtn.setDisableOnClick(true);

		resetBtn = new Button();
		resetBtn.setCaption("Reset");
		resetBtn.addStyleName(ValoTheme.BUTTON_DANGER);
		resetBtn.setWidth("-1px");
		resetBtn.setHeight("-10px");

		HorizontalLayout hLayout = new HorizontalLayout();
		hLayout.addComponents(flpSearchBtn,resetBtn);
		hLayout.setSpacing(true);
		FormLayout fLayout = new FormLayout();
		fLayout.setMargin(false);
		fLayout.addComponents(hLayout);
		verticalLayout.addComponent(fLayout);
		verticalLayout.setHeight("50px");
		verticalLayout.addStyleName("g-search-panel");
		verticalLayout.setComponentAlignment(fLayout, Alignment.TOP_LEFT);
		return verticalLayout; 

	}

	public void addListener() {

		flpSearchBtn.addClickListener(new Button.ClickListener() {

			private static final long serialVersionUID = 1L;

			@Override
			public void buttonClick(ClickEvent event) {
				flpSearchBtn.setEnabled(true);
				searchable.doSearch();
			}
		});	

		resetBtn.addClickListener(new Button.ClickListener() {

			private static final long serialVersionUID = 1L;

			@Override
			public void buttonClick(ClickEvent event) {
				removeTableFromLayout();
			}
		});
	}

	/**
	 * Method to reset all form values 
	 *
	 * */

	public void resetAlltheValues() 
	{

		Iterator<Component> componentIterator = buildPreauthSearchLayuout.iterator();
		while(componentIterator.hasNext()) 
		{
			Component searchScrnComponent = componentIterator.next() ;
			if(searchScrnComponent instanceof  Panel )
			{	
				System.out.println("---inside the if block---");
				Panel panel = (Panel)searchScrnComponent;
				Iterator<Component> searchScrnCompIter = panel.iterator();
				while (searchScrnCompIter.hasNext())
				{
					Component verticalLayoutComp = searchScrnCompIter.next();
					VerticalLayout vLayout = (VerticalLayout)verticalLayoutComp;
					Iterator<Component> vLayoutIter = vLayout.iterator();
					while(vLayoutIter.hasNext())
					{
						Component absoluteComponent = vLayoutIter.next();
						HorizontalLayout absLayout = (HorizontalLayout)absoluteComponent;
						Iterator<Component> absLayoutIter = absLayout.iterator();
						while(absLayoutIter.hasNext())
						{
							Component horizontalComp = absLayoutIter.next();
							if(horizontalComp instanceof HorizontalLayout)
							{
								HorizontalLayout hLayout = (HorizontalLayout)horizontalComp;
								Iterator<Component> formLayComp = hLayout.iterator();
								while(formLayComp.hasNext())
								{
									Component formComp = formLayComp.next();
									HorizontalLayout fLayout = (HorizontalLayout)formComp;
									Iterator<Component> formComIter = fLayout.iterator();

									while(formComIter.hasNext())
									{
										Component indivdualComp = formComIter.next();
										if(indivdualComp != null) 
										{
											if(indivdualComp instanceof Label) 
											{
												continue;
											}	
											if(indivdualComp instanceof TextField) 
											{
												TextField field = (TextField) indivdualComp;
												field.setValue("");
											} 
											else if(indivdualComp instanceof ComboBox)
											{
												ComboBox field = (ComboBox) indivdualComp;
												field.setValue(null);
											}	 
										}
									}
								}
							}
						}
					}
				}//Method to reset search table.
				removeTableFromLayout();
			}
		}
	}

	private void removeTableFromLayout()
	{
		if(null != searchable)
		{
			searchable.resetSearchResultTableValues();
		}
	}

	public void refresh()
	{
		System.out.println("---inside the refresh----");
		removeTableFromLayout();
	}

}
